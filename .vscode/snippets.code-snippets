{
	// Place your cedille2-metatheory workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Generate Induction Cases for FOmega": {
		"scope": "lean4",
		"prefix": "case fom",
		"body": [
			"case ax => sorry",
			"case var => sorry",
			"case pi => sorry",
			"case tpi => sorry",
			"case lam => sorry",
			"case app => sorry",
			"case econv => sorry",
			"case iconv => sorry",
		],
		"description": "Generate all cases for an Fomega Proof judgement"
	},
	"Generate Induction Cases for WCCC": {
		"scope": "lean4",
		"prefix": "case ced",
		"body": [
			"case ax => sorry",
			"case var => sorry",
			"case pi => sorry",
			"case lam => sorry",
			"case app => sorry",
			"case prod => sorry",
			"case pair => sorry",
			"case fst => sorry",
			"case snd => sorry",
			"case eq => sorry",
			"case refl => sorry",
			"case subst => sorry",
			"case phi => sorry",
			"case iconv => sorry",
			"case econv => sorry",
		],
		"description": "Generate all cases for Cedille Proof judgement"
	}
}